# This yaml file describes which files are excluded in rubocop run. 
# It can be in the project home directory or in the $HOME folder.

# Common configuration.
AllCops:
  Exclude:
    - 'gems/**/*'
    - 'modules/vendor/**/*'
    - 'local-gems/**/*'
    - '**/*.sh'
    - '**/Gemfile'

# --- XXXLength-Section --------------------------------------------------------------------
# too long lines, methods and classes are annoying,
# but at the moment the message doesn't really help
# we have other problems :-)
LineLength:
  Enabled: false

MethodLength:
  Enabled: false

ClassLength:
  Enabled: false

# --- Style Cops - Section -----------------------------------------------------------------
# Don't be so dogmatic about Hash-Style! Both are fine for us
HashSyntax:
  Enabled: false

# From upcoming Ruby 2.x on there is no need for this anymore, so why bothering now?
Encoding:
  Enabled: false

# Disables following message: Documentation: Missing top-level class documentation comment.
Documentation:
  Enabled: false

# Filename-Conventions are a thing that we decide by ourselves (at the moment ;-))
FileName:
  Enabled: false

# this 3-digit thing for portnumbers? oh, come on!
NumericLiterals:
  Enabled: false

# ok, one should avoid global vars, but from time to time we need them
Style/GlobalVars:
  Enabled: false

# I myself would always prefer the %r() Style for RegExp because it is more save and readable,
# others the classic style, even if the have to escape slashes.
# I think this can be ignored as a style-offense
Style/RegexpLiteral:
  Enabled: false

# --- Complexity - Section -----------------------------------------------------------------
# as old McCabe says:
#
# Cyclomatic Complexity 	Risk Evaluation...
# 1-10 	                    A simple module without much risk
# 11-20 	                A more complex module with moderate risk
# 21-50 	                A complex module of high risk
# 51 and greater 	        An untestable program of very high risk
CyclomaticComplexity:
  Max: 10

# Lint-Section -----------------------------------------------------------------------------
# what is soooo bad about blablubb.match /..../ compared to blablubb.match(/..../)?
Lint/AmbiguousRegexpLiteral:
  Enabled: false

